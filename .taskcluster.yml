# References:
#  - https://github.com/taskcluster/taskcluster-github/blob/master/.taskcluster.yml
#  - https://github.com/taskcluster/taskcluster-github/blob/master/docs/taskcluster-yml-v1.md
version: 1
policy:
  # Run these tasks for qualifying GH events for collaborators only to avoid just anyone having
  # access to my Taskcluster secret(s)
  pullRequests: collaborators
tasks:
  # When a PR is opened, reopened or synchronized, perform this task; this covers additional
  # commits to an existing open PR
  - $if: 'tasks_for == "github-pull-request" && event["action"] in ["opened", "reopened", "synchronize"]'
    then:
      # TC creates a task group with tasks in it; each task has an ID. TC will provide a link
      # built with these IDs in GH's GUI every time a task is created, even if it fails.
      taskId: {$eval: as_slugid("pr_task")} # Returns a hash of a string
      created: {$fromNow: ''}
      # If the task is not completed by its deadline, it will be resolved as `exception`
      # with reason "deadline-exceeded"
      deadline: {$fromNow: '1 hour'}
      # Identifies the Taskcluster provisioner responsible for the compute resources
      # (could be 1 CPU, a fraction of a CPU, multiple CPUs...)that will execute the
      # task. e.g. 'aws-provisioner-v1' is the AWS Provisioner, which runs its tasks
      # on Amazon EC2 instances using Docker.
      provisionerId: aws-provisioner-v1
      # A parameter specific to the AWS Provisioner which identifies the pool of EC2
      # resources within which the task should be executed. Pools may use different
      # EC2 instance types, AMIs (Amazon Machine Images), etc.
      # Generally, github-worker is a variant of docker-worker in TC docs
      workerType: github-worker # TC's generic worker for any github projects
      # A scope is a permission to perform a particular action. A task has a set of scopes
      # that determine what the task can do. These scopes are validated by the worker.
      scopes:
        - secrets:get:github.com/biancadanforth/taskcluster-integration-poc/ssh-key
      payload: # format depends on workerType
        features:
          # Service provided by the worker that lets the task make authenticated TC
          # requests within the scope(s) of a particular task.
          taskclusterProxy: true
        maxRunTime: 1200 # 20 minutes
        image: "node:10" # The Docker image to pull
        # The worker will automatically upload any artifacts upon task completion
        artifacts: # format depends on the workerType
          public/web-ext-artifacts:
            # contentType is not a valid key for workerType github-worker
            expires: {$fromNow: '14 days'}
            path: /repo/web-ext-artifacts
            type: directory
        env: # Environment variables to declare in the shell
          DEBUG: "* -eslint*" # Log levels for debug statements in library code; * means all
          # The name of the secret to fetch from Taskcluster's Secrets API
          SSHKEY_SECRET_NAME: "github.com/biancadanforth/taskcluster-integration-poc/ssh-key"
          SHELL: "/bin/bash"
        command: # The command to run within the Docker image
          - "/bin/bash"
          # '--login' (executes user's profile commands), '-c' (executes commands from a string)
          - "-lc"
          - >-
            git clone ${event.pull_request.head.repo.git_url} repo &&
            cd repo &&
            git checkout ${event.pull_request.head.sha} &&
            npm install &&
            npm run build &&
            npm run lint &&
            npm run package &&
            /repo/bin/configure_hg.sh &&
            /repo/bin/commit_xpi.sh &&
            /repo/bin/configure_ssh.sh &&
            node /repo/bin/get_secret.js &&
            cd mozilla-central &&
            ./mach try -p linux64 -u all -t none --artifact
      metadata:
        name: "Firefox Experiments GitHub Tests"
        description: "All tests"
        owner: ${event.pull_request.user.login}@users.noreply.github.com
        source: ${event.repository.url}
  # When a commit is pushed to master, perform this task
  # Note: Currently this is wrongly showing a status in GitHub PRs (Bug 1514914)
  - $if: 'tasks_for == "github-push"'
    then:
      $if: 'event.ref == "refs/heads/master"'
      then:
        taskId: {$eval: as_slugid("push_task")}
        created: {$fromNow: ''}
        deadline: {$fromNow: '1 hour'}
        provisionerId: aws-provisioner-v1
        workerType: github-worker
        payload:
          maxRunTime: 600
          image: "node:8"
          artifacts:
            public/web-ext-artifacts:
              # contentType is not a valid key for workerType github-worker
              expires: {$fromNow: '14 days'}
              path: /repo/web-ext-artifacts
              type: directory
          env:
            DEBUG: "* -eslint*"
            NO_TEST_SKIP: "true"
          command:
            - "/bin/bash"
            - "-lc"
            - >-
              git clone ${event.repository.url} repo &&
              cd repo &&
              git checkout ${event.after} &&
              npm install &&
              npm run build &&
              npm run lint &&
              npm run package &&
              /repo/bin/commit_xpi.sh
        metadata:
          name: "Firefox Experiments GitHub Tests"
          description: "All tests"
          owner: ${event.pusher.name}@users.noreply.github.com
          source: ${event.repository.url}
